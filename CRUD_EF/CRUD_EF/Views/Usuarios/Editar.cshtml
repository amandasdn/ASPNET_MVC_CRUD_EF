@model CRUD_EF.Models.Usuario

@{
    ViewBag.Title = "Editar dados do usuário #" + Model.ID;
}

<div id="conteudo">

    <div class="col-md-12 topo">
        <h1 class="col-md-8">Editar dados do usuário #@Model.ID</h1>
    </div>

    <div class="clearfix"></div>

    @using (Html.BeginForm())
    {

        <div class="box">

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hidden">
                        @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "text-danger" })
                        </div>
                    </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NivelAcesso, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NivelAcesso, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NivelAcesso, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <input type="submit" value="Salvar" class="btn btn-success mr-10" />
        @Html.ActionLink("Voltar para a Lista", "Lista", null, new { @class = "btn btn-primary" })

    }

</div>

@section scripts {

    <script>
        $(document).ready(function () {
            $(".btn-aside-usuarios").addClass(" active");
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
